apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "com.github.spotbugs"
apply plugin: "jacoco"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "io.github.mikiepure.bestbuy"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.all {
                jacoco {
                    includeNoLocationClasses = true
                    excludes = ['jdk.internal.*']
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    /* defaults */
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    /* for TextInputEditText */
    implementation 'com.google.android.material:material:1.3.0'
    /* for Kotlin */
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /* defaults */
    testImplementation 'junit:junit:4.13'
    /* for Robolectric */
    testImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.test:runner:1.3.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'

    /* defaults */
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java.srcDirs = files("src/main/java")
    }
}

spotbugs {
    ignoreFailures = true
    reportLevel = "low"
    effort = "max"
    toolVersion = "4.2.1"
}

spotbugsMain {
    dependsOn "assembleDebug"
    classes = files("$project.buildDir/intermediates/javac")

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacoco {
    toolVersion = "0.8.6"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest", group: "verification") {
    getSourceDirectories().from = files("${projectDir}/src/main/java")
    getClassDirectories().from = fileTree(dir: "${buildDir}/intermediates/javac/debug/classes", excludes: [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            'android/**/*.*',
            'androidx/**/*.*',
            '**/Lambda$*.class',
            '**/Lambda.class',
            '**/*Lambda.class',
            '**/*Lambda*.class',
            '**/*Lambda*.*',
            '**/*Builder.*'
    ])
    getExecutionData().from = "${buildDir}/jacoco/testDebugUnitTest.exec"

    reports {
        xml.enabled = false
        html.enabled = true
    }
}
